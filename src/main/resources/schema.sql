CREATE TABLE IF NOT EXISTS users (
                                     id INTEGER GENERATED BY DEFAULT AS IDENTITY,
                                     name varchar(40) NOT NULL,
    email varchar(40) NOT NULL,
    created_at timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
    );

CREATE TABLE IF NOT EXISTS requests (
                                        id INTEGER GENERATED BY DEFAULT AS IDENTITY,
                                        description varchar(100) NOT NULL,
    requestor_id INTEGER NOT NULL,
    created_at timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT pk_request PRIMARY KEY (id),
    CONSTRAINT fk_request_user FOREIGN KEY (requestor_id) REFERENCES users(id)

    );

CREATE TABLE IF NOT EXISTS items (
                                     id INTEGER GENERATED BY DEFAULT AS IDENTITY,
                                     owner_id INTEGER NOT NULL,
                                     request_id INTEGER,
                                     name varchar(100) NOT NULL,
    description varchar(255) NOT NULL,
    available boolean,
    created_at timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT pk_item PRIMARY KEY (id),
    CONSTRAINT fk_item_user FOREIGN KEY (owner_id) REFERENCES users(id),
    CONSTRAINT fk_item_request FOREIGN KEY (request_id) REFERENCES requests(id)
    );



CREATE TABLE IF NOT EXISTS booking (
                                       id INTEGER GENERATED BY DEFAULT AS IDENTITY,
                                       start_time timestamp,
                                       end_time timestamp,
                                       item_id INTEGER NOT NULL,
                                       booker_id INTEGER NOT NULL,
                                       status varchar(10) NOT NULL,
    created_at timestamp DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_booking PRIMARY KEY (id),
    CONSTRAINT fk_booking_item FOREIGN KEY (item_id) REFERENCES items(id),
    CONSTRAINT fk_booking_user FOREIGN KEY (booker_id) REFERENCES users(id),
    CHECK (start_time < end_time)
    );

CREATE TABLE IF NOT EXISTS comments (
                                        id INTEGER GENERATED BY DEFAULT AS IDENTITY,
                                        text varchar(255) NOT NULL,
    author_id INTEGER NOT NULL,
    item_id INTEGER NOT NULL,
    created_at timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT pk_comment PRIMARY KEY (id),
    CONSTRAINT fk_comment_user FOREIGN KEY (author_id) REFERENCES users(id),
    CONSTRAINT fk_comment_item FOREIGN KEY (item_id) REFERENCES items(id)
    );
